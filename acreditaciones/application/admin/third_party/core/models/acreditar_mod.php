<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');error_reporting(E_ALL ^ E_NOTICE);/** * @author Rodrigo Romero * @version 1.0.0 *  *  TODO: LOG */class acreditar_mod extends RR_Model {    private $search;    private $id;    public function __construct() {        parent::__construct();        $this->id = !empty($this->params['id']) ? $this->params['id'] : '';    }        public function getByKey() {        $this->search = filter_input(INPUT_POST, 'search');        $search = $this->db->select('a.*, t.nombre ticket_nombre, p.status pago')                ->from('acreditados a')                ->join('tickets t', 't.id = a.id_ticket','LEFT')                ->join('pagos p', 'a.id = p.acreditado_id','LEFT')                ->where('a.evento_id', $this->evento_id)                ->like('a.nombre', $this->search)                ->or_like('a.apellido', $this->search)                ->or_like('a.barcode', $this->search)                ->order_by('a.id','DESC')                ->get()                ->result();        $grid = $this->getGrid($search);        return array('success' => false, 'value' => $grid, 'responseType' => 'inject', 'inject' => 'j-module');    }        public function getById($i) {        $search = $this->db->select('a.*, t.nombre ticket_nombre, p.status pago')                ->from('acreditados a')                ->where('a.evento_id', $this->evento_id)                ->where('a.id', $i)                ->join('tickets t', 't.id = a.id_ticket','LEFT')                ->join('pagos p', 'a.id = p.acreditado_id','LEFT')                ->order_by('a.barcode', 'DESC')                ->get()                ->row();        return $search;    }        public function getAll() {        $acreditados = $this->db->select('a.*, t.nombre ticket_nombre, p.status pago')                ->from('acreditados a')                ->where('a.evento_id', $this->evento_id)                ->join('tickets t', 't.id = a.id_ticket','LEFT')                ->join('pagos p', 'a.id = p.acreditado_id','LEFT')                ->order_by('a.barcode', 'DESC')                ->get()                ->result();        return $acreditados;    }        public function getList() {        $data = $this->getAll();        return $this->getGrid($data);    }        public function getGrid($data) {        $grid = '<li class="tableHead hidden-xs hidden-sm row">        <div class="col-md-10">            <div class="row">                <div class="col-md-3">Nombre del participante</div>                <div class="col-md-3">Correo electr√≥nico</div>                <div class="col-md-2">Tipo de entrada</div>                <div class="col-md-2">Estado Pago</div>                            </div>        </div>                <div class="col-md-2">            <div>                Acreditar            </div>        </div>    </li>';        $template = <<<EOD<li class="item row">        <div class="col-xs-8 col-sm-9 col-md-10">            <div class="row">                <div class="name col-md-3"><a href="{link_acreditado}">{nombre_apellido}</a></div>                <div class="hidden-xs hidden-sm col-md-3"><a href="#" >{email}</a></div>                <div class="ticket col-md-2">{tipo_entrada}</div>                <div class="ticket col-md-2">{pago}</div>                <div class="detailBtn hidden-xs hidden-sm col-md-2"><a href="{link_acreditado}" >DETALLE</a></div>            </div>        </div>        <div class="switch col-xs-4 col-sm-3 col-md-2 text-right">            <a href="javascript:void(0)" class="{switchONOFF}" onClick="return false" data-link="{link}"></a>        </div>    </li>EOD;        $replace = array('{nombre_apellido}', '{email}', '{tipo_entrada}', '{link_acreditado}', '{switchONOFF}', '{link}', '{pago}');        foreach ($data as $acreditado) {            $switchONOFF = ($acreditado->acreditado) ? 'switchON' : 'switchOFF';            $data = array($acreditado->nombre . ' ' . $acreditado->apellido, $acreditado->email, $acreditado->ticket_nombre, lang_url('acreditar/detalle/id/'.$acreditado->id), $switchONOFF, lang_url('acreditar/alta/id/'.$acreditado->id), $acreditado->pago);            $grid .= str_replace($replace, $data, $template);        }        return $grid;    }        public function alta() {        if (!empty($this->id)) {            $values = array('acreditado' => 1);            $this->db->where('id', $this->id);            $query = $this->db->update('acreditados', $values);            if ($query) {                $success = true;                $responseType = 'function';                $function = 'reloadView';                $status = $this->view('alerts/generic', array('success' => 'Usuario Ingresado Exitosamente', 'type' => 'success'));                $list = $this->getList();                $data = array('success' => $success, 'responseType' => $responseType, 'value' => $function, "html" => $list, 'status' => $status, 'inject' => 'j-a');            }        }        return $data;    }        }